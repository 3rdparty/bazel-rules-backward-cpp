"""Adds repositories/archives."""

########################################################################
# DO NOT EDIT THIS FILE unless you are inside the
# https://github.com/3rdparty/bazel-rules-backward-cpp repository. If you
# encounter it anywhere else it is because it has been copied there in
# order to simplify adding transitive dependencies. If you want a
# different version of bazel-rules-backward-cpp follow the Bazel build
# instructions at https://github.com/3rdparty/bazel-rules-backward-cpp.
########################################################################

load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "new_git_repository")

_ALL_CONTENT = """\
filegroup(
    name = "all",
    srcs = glob(["**"]),
    visibility = ["//visibility:public"],
)
"""

def repos(external = True, repo_mapping = {}, workspace_prefix = ""):
    maybe(
        http_archive,
        name = "rules_foreign_cc",
        url = "https://github.com/bazelbuild/rules_foreign_cc/archive/refs/tags/0.9.0.tar.gz",
        sha256 = "2a4d07cd64b0719b39a7c12218a3e507672b82a97b98c6a89d38565894cf7c51",
        strip_prefix = "rules_foreign_cc-0.9.0",
        repo_mapping = repo_mapping,
    )

    # Get version. 'binutils' doesn't compile
    # without this binary.
    maybe(
        http_archive,
        name = "com_github_texinfo",
        url = "https://ftp.gnu.org/gnu/texinfo/texinfo-6.8.tar.xz",
        build_file_content = _ALL_CONTENT,
        sha256 = "8eb753ed28bca21f8f56c1a180362aed789229bd62fff58bf8368e9beb59fec4",
        strip_prefix = "texinfo-6.8",
    )

    # Get binutils to read the debug info.
    maybe(
        http_archive,
        name = "com_github_binutils",
        url = "https://ftp.gnu.org/gnu/binutils/binutils-2.38.tar.gz",
        build_file_content = _ALL_CONTENT,
        sha256 = "b3f1dc5b17e75328f19bd88250bee2ef9f91fc8cbb7bd48bdb31390338636052",
        strip_prefix = "binutils-2.38",
    )

    # Get libunwind to unwind the stack. (There is no need
    # in this library on macOS, because on macOS clang provides a libunwind API
    # compatible library as part of its environment).
    maybe(
        http_archive,
        name = "com_github_libunwind",
        url = "https://github.com/libunwind/libunwind/releases/download/v1.6.2/libunwind-1.6.2.tar.gz",
        build_file_content = _ALL_CONTENT,
        sha256 = "4a6aec666991fb45d0889c44aede8ad6eb108071c3554fcdff671f9c94794976",
        strip_prefix = "libunwind-1.6.2",
    )

    maybe(
        new_git_repository,
        name = "com_github_lzma",
        remote = "https://github.com/kobolabs/liblzma.git",
        build_file_content = _ALL_CONTENT,
        commit = "87b7682ce4b1c849504e2b3641cebaad62aaef87",
        shallow_since = "1385587354 -0500",
    )

    # Get the latest gtest version.
    maybe(
        http_archive,
        name = "com_github_google_googletest",
        url = "https://github.com/google/googletest/archive/refs/tags/release-1.12.1.tar.gz",
        sha256 = "81964fe578e9bd7c94dfdb09c8e4d6e6759e19967e397dbea48d1c10e45d0df2",
        strip_prefix = "googletest-release-1.12.1",
        repo_mapping = repo_mapping,
    )

    maybe(
        http_archive,
        name = "com_github_backward_cpp",
        url = "https://github.com/bombela/backward-cpp/archive/refs/tags/v1.6.tar.gz",
        sha256 = "c654d0923d43f1cea23d086729673498e4741fb2457e806cfaeaea7b20c97c10",
        strip_prefix = "backward-cpp-1.6",
        repo_mapping = repo_mapping,
        patch_args = ["-p1"],
        patches = [workspace_prefix + "//:backward_cpp.patch"],
    )
